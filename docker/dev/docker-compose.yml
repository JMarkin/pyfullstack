version: "3.7"

networks:
  default:
    name: pyfullstack

x-common: &common
  env_file: ../../.env
  tmpfs:
    - /run
    - /var/cache
    - /tmp

volumes:
  db:


services:
  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - 5445:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app"]
      interval: 5s
      timeout: 5s
      retries: 5

  back:
    image: back:dev
    build:
      context: ../..
      dockerfile: ./docker/dev/back.dockerfile
    command: uvicorn --host 0.0.0.0 --reload back.app:app
    <<: *common
    volumes:
      - ../..:/app
    depends_on:
      postgres:
        condition: service_healthy

  collect-worker:
    image: back:dev
    build:
      context: ../..
      dockerfile: ./docker/dev/back.dockerfile
    command: python -m back collect-worker
    <<: *common
    volumes:
      - ../..:/app
    depends_on:
      postgres:
        condition: service_healthy

  front:
    build:
      context: ../..
      dockerfile: ./docker/dev/front.dockerfile
    command: npm run dev
    user: node
    <<: *common
    ports:
      - 3000:3000
    volumes:
      - ../../front/:/app

  nginx:
    image: nginx:alpine
    ports:
      - 8000:80
    volumes:
      - ../../nginx/dev.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - back
